/// <reference types="node" />
import { HIDDevice } from '../device';
import { EncodeJPEGHelper, InternalFillImageOptions, OpenStreamDeckOptions, StreamDeckBase, StreamDeckProperties } from './base';
/**
 * Base class for generation 2 hardware (starting with the xl)
 */
export declare abstract class StreamDeckGen2Base extends StreamDeckBase {
    protected readonly encodeJPEG: EncodeJPEGHelper;
    protected readonly xyFlip: boolean;
    constructor(device: HIDDevice, options: Required<OpenStreamDeckOptions>, properties: StreamDeckProperties, disableXYFlip?: boolean);
    /**
     * Sets the brightness of the keys on the Stream Deck
     *
     * @param {number} percentage The percentage brightness
     */
    setBrightness(percentage: number): Promise<void>;
    resetToLogo(): Promise<void>;
    getFirmwareVersion(): Promise<string>;
    getSerialNumber(): Promise<string>;
    protected getFillImageCommandHeaderLength(): number;
    protected writeFillImageCommandHeader(buffer: Buffer, keyIndex: number, partIndex: number, isLast: boolean, bodyLength: number): void;
    protected getFillImagePacketLength(): number;
    protected convertFillImage(sourceBuffer: Buffer, sourceOptions: InternalFillImageOptions): Promise<Buffer>;
}
//# sourceMappingURL=base-gen2.d.ts.map