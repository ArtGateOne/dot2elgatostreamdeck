"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamDeckMini = void 0;
const util_1 = require("../util");
const base_gen1_1 = require("./base-gen1");
const id_1 = require("../id");
const miniProperties = {
    MODEL: id_1.DeviceModelId.MINI,
    PRODUCT_NAME: 'Streamdeck Mini',
    COLUMNS: 3,
    ROWS: 2,
    ICON_SIZE: 80,
    KEY_DIRECTION: 'ltr',
    KEY_DATA_OFFSET: 0,
};
class StreamDeckMini extends base_gen1_1.StreamDeckGen1Base {
    constructor(device, options) {
        super(device, options, miniProperties);
    }
    async convertFillImage(sourceBuffer, sourceOptions) {
        const byteBuffer = (0, util_1.imageToByteArray)(sourceBuffer, sourceOptions, { colorMode: 'bgr', rotate: true, yFlip: true }, util_1.BMP_HEADER_LENGTH, this.ICON_SIZE);
        (0, util_1.writeBMPHeader)(byteBuffer, this.ICON_SIZE, this.ICON_BYTES, 2835);
        return Promise.resolve(byteBuffer);
    }
    getFillImagePacketLength() {
        return 1024;
    }
}
exports.StreamDeckMini = StreamDeckMini;
//# sourceMappingURL=mini.js.map