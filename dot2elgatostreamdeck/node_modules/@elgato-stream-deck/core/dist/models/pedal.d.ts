/// <reference types="node" />
import { HIDDevice } from '../device';
import { OpenStreamDeckOptions, StreamDeckInputBase } from './base';
import { FillImageOptions, FillPanelOptions } from '../types';
export declare class StreamDeckPedal extends StreamDeckInputBase {
    constructor(device: HIDDevice, options: Required<OpenStreamDeckOptions>);
    /**
     * Sets the brightness of the keys on the Stream Deck
     *
     * @param {number} percentage The percentage brightness
     */
    setBrightness(_percentage: number): Promise<void>;
    resetToLogo(): Promise<void>;
    getFirmwareVersion(): Promise<string>;
    getSerialNumber(): Promise<string>;
    fillKeyColor(_keyIndex: number, _r: number, _g: number, _b: number): Promise<void>;
    fillKeyBuffer(_keyIndex: number, _imageBuffer: Buffer, _options?: FillImageOptions): Promise<void>;
    fillPanelBuffer(_imageBuffer: Buffer, _options?: FillPanelOptions): Promise<void>;
    clearKey(_keyIndex: number): Promise<void>;
    clearPanel(): Promise<void>;
}
//# sourceMappingURL=pedal.d.ts.map