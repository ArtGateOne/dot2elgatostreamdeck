"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.StreamDeckPedal = void 0;
const base_1 = require("./base");
const id_1 = require("../id");
const pedalProperties = {
    MODEL: id_1.DeviceModelId.PEDAL,
    PRODUCT_NAME: 'Streamdeck Pedal',
    COLUMNS: 3,
    ROWS: 1,
    ICON_SIZE: 0,
    KEY_DIRECTION: 'ltr',
    KEY_DATA_OFFSET: 3,
};
class StreamDeckPedal extends base_1.StreamDeckInputBase {
    constructor(device, options) {
        super(device, options, pedalProperties);
    }
    /**
     * Sets the brightness of the keys on the Stream Deck
     *
     * @param {number} percentage The percentage brightness
     */
    async setBrightness(_percentage) {
        // Not supported
    }
    async resetToLogo() {
        // Not supported
    }
    async getFirmwareVersion() {
        const val = await this.device.getFeatureReport(5, 32);
        const end = val.indexOf(0);
        return val.toString('ascii', 6, end === -1 ? undefined : end);
    }
    async getSerialNumber() {
        const val = await this.device.getFeatureReport(6, 32);
        return val.toString('ascii', 2, 14);
    }
    async fillKeyColor(_keyIndex, _r, _g, _b) {
        // Not supported
    }
    async fillKeyBuffer(_keyIndex, _imageBuffer, _options) {
        // Not supported
    }
    async fillPanelBuffer(_imageBuffer, _options) {
        // Not supported
    }
    async clearKey(_keyIndex) {
        // Not supported
    }
    async clearPanel() {
        // Not supported
    }
}
exports.StreamDeckPedal = StreamDeckPedal;
//# sourceMappingURL=pedal.js.map