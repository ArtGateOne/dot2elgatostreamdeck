import { HIDDevice } from './device';
import { DeviceModelId } from './id';
import { OpenStreamDeckOptions } from './models';
import { StreamDeck } from './types';
export * from './types';
export * from './id';
export { HIDDevice } from './device';
export { OpenStreamDeckOptions } from './models';
export { StreamDeckProxy } from './proxy';
/** Elgato vendor id */
export declare const VENDOR_ID = 4057;
export declare enum DeviceModelType {
    STREAMDECK = "streamdeck",
    PEDAL = "pedal"
}
export interface DeviceModelSpec {
    id: DeviceModelId;
    type: DeviceModelType;
    productId: number;
    class: new (device: HIDDevice, options: Required<OpenStreamDeckOptions>) => StreamDeck;
}
/** List of all the known models, and the classes to use them */
export declare const DEVICE_MODELS: DeviceModelSpec[];
//# sourceMappingURL=index.d.ts.map