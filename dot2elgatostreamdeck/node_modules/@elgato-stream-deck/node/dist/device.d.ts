/// <reference types="node" />
/// <reference types="node" />
import { DeviceModelId, HIDDevice } from '@elgato-stream-deck/core';
import { EventEmitter } from 'events';
/**
 * Information about a found streamdeck
 */
export interface StreamDeckDeviceInfo {
    /** The model of the device */
    model: DeviceModelId;
    /** The connected path of the device in the usb tree */
    path: string;
    /** The serialNumber of the device. If set it can be used as a unique hardware identifier */
    serialNumber?: string;
}
/**
 * The wrapped node-hid HIDDevice.
 * This translates it into the common format expected by @elgato-stream-deck/core
 */
export declare class NodeHIDDevice extends EventEmitter implements HIDDevice {
    private device;
    constructor(deviceInfo: StreamDeckDeviceInfo);
    close(): Promise<void>;
    sendFeatureReport(data: Buffer): Promise<void>;
    getFeatureReport(reportId: number, reportLength: number): Promise<Buffer>;
    sendReports(buffers: Buffer[]): Promise<void>;
}
//# sourceMappingURL=device.d.ts.map